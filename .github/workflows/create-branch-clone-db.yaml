on:
  push:
    branches:
      - 'feature/test-github-action-1'

jobs:
  clone-db:
    environment: webhook-secret
    runs-on: ubuntu-latest
    name: List the display name and shape of the instances in my compartment
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: |
        -----BEGIN PRIVATE KEY-----
        MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQD1Uu2TWhgyB5ph
        OnoNOQy1Mp/qRsrZP8FUD/ZKjZYEHjIv+3EtJ0DyZQny9dQyOLqzf8b2UnP1nxIJ
        AAtBCi475NkWrq1H4/J1a9jL5d3kwcV+g1TxoWqcHtFd0CauHYM+wGe9laCgMTCZ
        HCRLsAfgCXRU8jh3J7jciWjAtMbOfkBd9JYjqW1IfcRRV/TZfo/bJRl+PF5GVN9x
        AlMb4Bn1bx8Chk1NtddsnjRkYBgaJdZoLAHRhXkWmvORJMn/70BqEgxntxH+s0a2
        Kv1ZtziVziaL6Nj+6bCrkFtL9AklBesdCuV4KnL9Thg0KJtGJP0RhLiI48rFFoFM
        VjQk9Oa3AgMBAAECggEBAOsQRuxGC6EEf/xh18kLvQ1yMKB+rKd123z8vnW5LOFN
        PbGUMGGfly+reNkAjA6DJQIRkUc8wje778AH9sCfTKW/JfQB869Kz2uLpvPYkcE7
        mk0a8i2FCW4GaX6GkEmNpdBe9AhIctyLxZEv0edkCGe3J2ytm0UxHoTSdTkQ/t2j
        YynWeR0ZNI/aznPKCcwEmipetilT3lH3xMYqcbixGOqfrAPdS2LE74LO8rp03tjb
        xPBgeiwZ9PyieOZCJ0zZA2BFRAX9imY6Ga43P5bH6X8VwYygrEUzG5PT58l8GSX/
        Ih8xavetRfNSrqV6QBKuitKhK7SMS9S1HYzzRFZ/5cECgYEA/TG823RLSmy7JbIi
        4U+WbLY868at1HZDH1brtkNtv0QsmdKuAJpBylXsTD5Xfw6iO5nTNKIyMnhleaMT
        0BC0Id7T9/8tnuHfkCCSchfEFVIDdjyPHVm4sUe9TEpF2mkddjJQNtU21bPIeZxQ
        O1FYi2c7AKZidALw3iOeZ4/f31kCgYEA+ArdGbj+3YBdBN7/Vsu2DN+RJa14jujI
        Kb7fFq1JmNrfUL8HgsH3DOkK0kaEr+I7IU2+8/nvt/Svl2jcM4SM/qSD7818Wo44
        5akk1w883Ap5++HTP1TE2RLIKtH7ysPU/GZ/3wOmWKZJ4TjSbs7TZp7n5pi/7Djf
        bW+mKpE/xI8CgYEAgIHxF/VjjWe4aP6L442QjKbGLukNK0vG764fPsfkePJyLLSY
        qiehAsAvidcOc6eKwfNmFk3IaoNfBai2kqEXvCUrsrBqiDyeSrmteokDdcrFhQph
        nQT/z8LYmlMMNzmowWfx/JKlHTv9oXOr6R91cHO5p6/LQpSHikfLy0Zj2ykCgYAD
        SAmCxJrCjWctoFGacVl4NCD0caYNpfC39Kl44FP/7K1VoSFVToGZLyAQhhRNS13i
        4+dpzN2p/lewVhfLqq4+1ChWrM4/WHBSQXmWSsJQWucgOO2VgeaUxJXXUy3UkeCo
        ciaw6ZhyxchmbV0DUEMlsWZ5+31Wf64dAYQePgus6wKBgFJ+iaqE76dp/nVKcbbU
        ljRB1XMnA1K8cwZvwqDfnRoKbA8+jsgXQTs7W57z9ktKU2wV4JL0OvNfnwsdOrwk
        r4VCUvfonRg/k/9A6+VRw1xcXqMQ+L2J1MWRadQiXQx7MSjwWGyaRPfURdxzUoi9
        bYDZl5UVuwIj1vr7NB5qM3/g
        -----END PRIVATE KEY-----
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
      - uses: actions/checkout@v2 # Make sure to include this step  

      - name: Set up environment variables
        env :
          a : ${{ secrets.OCI_CLI_USER }}
        run : |
          echo "OCI_CLI_USER: '${{ secrets.OCI_CLI_USER }}'"
          echo "OCI_CLI_FINGERPRINT: '${{ secrets.OCI_CLI_FINGERPRINT }}'" | sed 's/./& /g'
          echo "OCI_CLI_REGION: '${{ secrets.OCI_CLI_REGION }}'" | sed 's/./& /g'
          echo "OCI_CLI_TENANCY: '${{ secrets.OCI_CLI_TENANCY }}'" | sed 's/./& /g'
          echo $a | sed 's/./& /g'


    
      - name: Retrieve the OCID of a named compartment in tenancy
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: find-compartment-id
        with:
          command: 'iam compartment list --compartment-id-in-subtree=true --query "data[?name==`labexer`].id"'

      - name: Retrieve the display name and shape of the instances in my compartment
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        id: find-instances
        with:
          command: 'compute instance list --compartment-id ${{ steps.find-compartment-id.outputs.raw_output }}'
          query: 'data[*].{name: \"display-name\", shape: shape}'

      - name: List the display name and shape of the instances in my compartment
        run: |
          echo ${{ steps.find-instances.outputs.output }} | jq .  

      - name: Create Kubernetes Configuration
        run: |
          oci ce cluster create-kubeconfig \
            --cluster-id ocid1.cluster.oc1.ap-mumbai-1.aaaaaaaa7dentcobq4z5xpqkn7kdpcg6obon4icgghgwe2fgtckgxg5oew6q \
            --file $HOME/.kube/config \
            --region ap-mumbai-1 \
            --token-version 2.0.0 \
            --kube-endpoint PUBLIC_ENDPOINT

      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.3.2
        id: test-configure-kubectl-oke-action
        with:
          cluster: ocid1.cluster.oc1.ap-mumbai-1.aaaaaaaa7dentcobq4z5xpqkn7kdpcg6obon4icgghgwe2fgtckgxg5oew6q


      - name: Install Oracle Database Operator
        run: |
          kubectl apply -f build_spec_with_operator.yaml --validate=false



      - name: Create Autonomous Database from Clone
        run: |
          # Configuration Variables
          SOURCE_DB_OCID="ocid1.autonomousdatabase.oc1.ap-mumbai-1.anrg6ljrobogfhqajjp7nk74dr3bputn3aa646uistr5xiyxwu5tkh3octuq"
          CLONE_TYPE="FULL"
          CLONE_DB_DISPLAY_NAME="Test Clone CICD"
          CLONE_DB_NAME="TestCloneAutomateCICD"
          COMPARTMENT_OCID="ocid1.compartment.oc1..aaaaaaaavkerdgzd55avjsnomocb2ttxb4j4j7gecxwdfwtstwb2iyowtfba"
          ADMIN_PASSWORD="Igdefault@123"
          COMPUTE_MODEL="ECPU"
          COMPUTE_COUNT=2
          DB_WORKLOAD="OLTP"

          # Create Autonomous Database from Clone
          echo "Creating Autonomous Database from Clone..."
          CREATE_RESPONSE=$(oci db autonomous-database create-from-clone \
                              --clone-type "$CLONE_TYPE" \
                              --compartment-id "$COMPARTMENT_OCID" \
                              --source-id "$SOURCE_DB_OCID" \
                              --display-name "$CLONE_DB_DISPLAY_NAME" \
                              --db-name "$CLONE_DB_NAME" \
                              --wait-for-state AVAILABLE \
                              --admin-password "$ADMIN_PASSWORD" \
                              --data-storage-size-in-tbs 1 \
                              --compute-model "$COMPUTE_MODEL" \
                              --compute-count "$COMPUTE_COUNT" \
                              --db-workload "$DB_WORKLOAD")

          if [ -z "$CREATE_RESPONSE" ]; then
              echo "Failed to create the Autonomous Database from Clone."
              exit 1
          else
              CLONED_DB_OCID=$(echo "$CREATE_RESPONSE" | jq -r '.data.id')
              echo "Successfully created the Autonomous Database from Clone. OCID: $CLONED_DB_OCID"
          fi
